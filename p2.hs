--Each new term in the Fibonacci sequence is generated by adding the previous two terms.
--By starting with 1 and 2, the first 10 terms will be:
--
--1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
--
--Find the sum of all the even-valued terms in the sequence which do not exceed four million.

main = print $ show(sum fibs)

fibs = filter even (takeWhile ( <= 4000000) (map fastfib [1..]))

--old
fib 1 = 1
fib 2 = 1 + (fib 1)
fib x = fib (x-1) + fib (x-2)

--new
fastfib :: Integer -> Integer
fastfib n = fst (fibPair n)

fibPair :: Integer -> (Integer, Integer)
fibPair 1 = (1, 2)
fibPair n = fibStep(fibPair(n-1))

fibStep :: (Integer, Integer) -> (Integer, Integer)
fibStep (u, v) = (v, u+v)